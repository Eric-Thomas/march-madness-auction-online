name: Push and Clean Docker Images in AWS ECR Repo

on:
  push:
    tags: [ 'v*.*.*' ]
  pull_request:
    branches:
      - main
    types: [opened, synchronize, closed]

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.event.action != 'closed' }} # Only run this job if it's not a closed PR
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Docker image tag
        id: set-image-tag
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "IMAGE_TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Build, tag, and push the backend image to Amazon ECR
        id: build-backend-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: backend.${{ env.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile.backend .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push the frontend image to Amazon ECR
        id: build-frontend-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: frontend.${{ env.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile.frontend .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  Delete-PR-Image:
    name: Delete PR Docker Image from ECR
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    needs: Build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Delete backend PR image from ECR
        run: |
          aws ecr batch-delete-image --repository-name ${{ secrets.REPO_NAME }} --image-ids imageTag=backend.pr-${{ github.event.pull_request.number }}

      - name: Delete frontend PR image from ECR
        run: |
          aws ecr batch-delete-image --repository-name ${{ secrets.REPO_NAME }} --image-ids imageTag=frontend.pr-${{ github.event.pull_request.number }}
